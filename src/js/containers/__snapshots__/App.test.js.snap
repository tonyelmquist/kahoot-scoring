// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App smoke test renders correctly 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="letter-tile-area"
        >
          <header
            className="App-header"
          >
            <Logo
              color="#864CBF"
            />
            <h1
              className="App-title"
            >
              POINTS
            </h1>
          </header>
          <h2
            className="items-header"
          >
            ITEMS
          </h2>
          <div
            className="items-area"
          >
            <LetterButton
              incrementTally={[Function]}
              item={
                Object {
                  "bonusInterval": 3,
                  "bonusValue": 200,
                  "name": "A",
                  "tally": 0,
                  "value": 50,
                }
              }
            />
            <LetterButton
              incrementTally={[Function]}
              item={
                Object {
                  "bonusInterval": 2,
                  "bonusValue": 90,
                  "name": "B",
                  "tally": 0,
                  "value": 30,
                }
              }
            />
            <LetterButton
              incrementTally={[Function]}
              item={
                Object {
                  "bonusInterval": 0,
                  "bonusValue": 0,
                  "name": "C",
                  "tally": 0,
                  "value": 20,
                }
              }
            />
            <LetterButton
              incrementTally={[Function]}
              item={
                Object {
                  "bonusInterval": 0,
                  "bonusValue": 0,
                  "name": "D",
                  "tally": 0,
                  "value": 15,
                }
              }
            />
          </div>
        </div>,
        <div
          className="scoring-area"
        >
          <header
            className="scoring-header"
          >
            <h1
              className="scoring-title"
            >
              PLAYER ITEMS
            </h1>
          </header>
          <table
            className="points-table"
          >
            <tbody>
              <tr
                className="scoring-table-header"
              >
                <th>
                  Item
                </th>
                <th>
                  Quantity
                </th>
                <th>
                  Points
                </th>
              </tr>
            </tbody>
          </table>
          <div
            className="bonus"
          >
            Bonus: 
            <span
              className="bonus-value"
            >
              0
            </span>
          </div>
          <div
            className="totals"
          >
            <div
              className="total-column"
            >
              <div>
                Total:
              </div>
              <div
                className="total"
              >
                0
              </div>
            </div>
            <t
              action={[Function]}
              active={false}
              blocked={false}
              bubbles={false}
              className="reset-button"
              cssModule={null}
              disabled={false}
              element={null}
              href={null}
              moveEvents={true}
              placeholder={false}
              rootElement="aws-btn"
              size={null}
              style={Object {}}
              target={null}
              title={null}
              to={null}
              type="primary"
              visible={true}
            >
              NEW GAME
            </t>
          </div>
        </div>,
      ],
      "className": "App",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <header
              className="App-header"
            >
              <Logo
                color="#864CBF"
              />
              <h1
                className="App-title"
              >
                POINTS
              </h1>
            </header>,
            <h2
              className="items-header"
            >
              ITEMS
            </h2>,
            <div
              className="items-area"
            >
              <LetterButton
                incrementTally={[Function]}
                item={
                  Object {
                    "bonusInterval": 3,
                    "bonusValue": 200,
                    "name": "A",
                    "tally": 0,
                    "value": 50,
                  }
                }
              />
              <LetterButton
                incrementTally={[Function]}
                item={
                  Object {
                    "bonusInterval": 2,
                    "bonusValue": 90,
                    "name": "B",
                    "tally": 0,
                    "value": 30,
                  }
                }
              />
              <LetterButton
                incrementTally={[Function]}
                item={
                  Object {
                    "bonusInterval": 0,
                    "bonusValue": 0,
                    "name": "C",
                    "tally": 0,
                    "value": 20,
                  }
                }
              />
              <LetterButton
                incrementTally={[Function]}
                item={
                  Object {
                    "bonusInterval": 0,
                    "bonusValue": 0,
                    "name": "D",
                    "tally": 0,
                    "value": 15,
                  }
                }
              />
            </div>,
          ],
          "className": "letter-tile-area",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Logo
                  color="#864CBF"
                />,
                <h1
                  className="App-title"
                >
                  POINTS
                </h1>,
              ],
              "className": "App-header",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "color": "#864CBF",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "POINTS",
                  "className": "App-title",
                },
                "ref": null,
                "rendered": "POINTS",
                "type": "h1",
              },
            ],
            "type": "header",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "ITEMS",
              "className": "items-header",
            },
            "ref": null,
            "rendered": "ITEMS",
            "type": "h2",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <LetterButton
                  incrementTally={[Function]}
                  item={
                    Object {
                      "bonusInterval": 3,
                      "bonusValue": 200,
                      "name": "A",
                      "tally": 0,
                      "value": 50,
                    }
                  }
                />,
                <LetterButton
                  incrementTally={[Function]}
                  item={
                    Object {
                      "bonusInterval": 2,
                      "bonusValue": 90,
                      "name": "B",
                      "tally": 0,
                      "value": 30,
                    }
                  }
                />,
                <LetterButton
                  incrementTally={[Function]}
                  item={
                    Object {
                      "bonusInterval": 0,
                      "bonusValue": 0,
                      "name": "C",
                      "tally": 0,
                      "value": 20,
                    }
                  }
                />,
                <LetterButton
                  incrementTally={[Function]}
                  item={
                    Object {
                      "bonusInterval": 0,
                      "bonusValue": 0,
                      "name": "D",
                      "tally": 0,
                      "value": 15,
                    }
                  }
                />,
              ],
              "className": "items-area",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "A",
                "nodeType": "class",
                "props": Object {
                  "incrementTally": [Function],
                  "item": Object {
                    "bonusInterval": 3,
                    "bonusValue": 200,
                    "name": "A",
                    "tally": 0,
                    "value": 50,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "B",
                "nodeType": "class",
                "props": Object {
                  "incrementTally": [Function],
                  "item": Object {
                    "bonusInterval": 2,
                    "bonusValue": 90,
                    "name": "B",
                    "tally": 0,
                    "value": 30,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "C",
                "nodeType": "class",
                "props": Object {
                  "incrementTally": [Function],
                  "item": Object {
                    "bonusInterval": 0,
                    "bonusValue": 0,
                    "name": "C",
                    "tally": 0,
                    "value": 20,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": "D",
                "nodeType": "class",
                "props": Object {
                  "incrementTally": [Function],
                  "item": Object {
                    "bonusInterval": 0,
                    "bonusValue": 0,
                    "name": "D",
                    "tally": 0,
                    "value": 15,
                  },
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <header
              className="scoring-header"
            >
              <h1
                className="scoring-title"
              >
                PLAYER ITEMS
              </h1>
            </header>,
            <table
              className="points-table"
            >
              <tbody>
                <tr
                  className="scoring-table-header"
                >
                  <th>
                    Item
                  </th>
                  <th>
                    Quantity
                  </th>
                  <th>
                    Points
                  </th>
                </tr>
              </tbody>
            </table>,
            <div
              className="bonus"
            >
              Bonus: 
              <span
                className="bonus-value"
              >
                0
              </span>
            </div>,
            <div
              className="totals"
            >
              <div
                className="total-column"
              >
                <div>
                  Total:
                </div>
                <div
                  className="total"
                >
                  0
                </div>
              </div>
              <t
                action={[Function]}
                active={false}
                blocked={false}
                bubbles={false}
                className="reset-button"
                cssModule={null}
                disabled={false}
                element={null}
                href={null}
                moveEvents={true}
                placeholder={false}
                rootElement="aws-btn"
                size={null}
                style={Object {}}
                target={null}
                title={null}
                to={null}
                type="primary"
                visible={true}
              >
                NEW GAME
              </t>
            </div>,
          ],
          "className": "scoring-area",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <h1
                className="scoring-title"
              >
                PLAYER ITEMS
              </h1>,
              "className": "scoring-header",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "PLAYER ITEMS",
                "className": "scoring-title",
              },
              "ref": null,
              "rendered": "PLAYER ITEMS",
              "type": "h1",
            },
            "type": "header",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <tbody>
                <tr
                  className="scoring-table-header"
                >
                  <th>
                    Item
                  </th>
                  <th>
                    Quantity
                  </th>
                  <th>
                    Points
                  </th>
                </tr>
              </tbody>,
              "className": "points-table",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <tr
                    className="scoring-table-header"
                  >
                    <th>
                      Item
                    </th>
                    <th>
                      Quantity
                    </th>
                    <th>
                      Points
                    </th>
                  </tr>,
                  Array [],
                ],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <th>
                        Item
                      </th>,
                      <th>
                        Quantity
                      </th>,
                      <th>
                        Points
                      </th>,
                    ],
                    "className": "scoring-table-header",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Item",
                      },
                      "ref": null,
                      "rendered": "Item",
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Quantity",
                      },
                      "ref": null,
                      "rendered": "Quantity",
                      "type": "th",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Points",
                      },
                      "ref": null,
                      "rendered": "Points",
                      "type": "th",
                    },
                  ],
                  "type": "tr",
                },
              ],
              "type": "tbody",
            },
            "type": "table",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                "Bonus: ",
                <span
                  className="bonus-value"
                >
                  0
                </span>,
              ],
              "className": "bonus",
            },
            "ref": null,
            "rendered": Array [
              "Bonus: ",
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": 0,
                  "className": "bonus-value",
                },
                "ref": null,
                "rendered": 0,
                "type": "span",
              },
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="total-column"
                >
                  <div>
                    Total:
                  </div>
                  <div
                    className="total"
                  >
                    0
                  </div>
                </div>,
                <t
                  action={[Function]}
                  active={false}
                  blocked={false}
                  bubbles={false}
                  className="reset-button"
                  cssModule={null}
                  disabled={false}
                  element={null}
                  href={null}
                  moveEvents={true}
                  placeholder={false}
                  rootElement="aws-btn"
                  size={null}
                  style={Object {}}
                  target={null}
                  title={null}
                  to={null}
                  type="primary"
                  visible={true}
                >
                  NEW GAME
                </t>,
              ],
              "className": "totals",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div>
                      Total:
                    </div>,
                    <div
                      className="total"
                    >
                      0
                    </div>,
                  ],
                  "className": "total-column",
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Total:",
                    },
                    "ref": null,
                    "rendered": "Total:",
                    "type": "div",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": 0,
                      "className": "total",
                    },
                    "ref": null,
                    "rendered": 0,
                    "type": "div",
                  },
                ],
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "action": [Function],
                  "active": false,
                  "blocked": false,
                  "bubbles": false,
                  "children": "NEW GAME",
                  "className": "reset-button",
                  "cssModule": null,
                  "disabled": false,
                  "element": null,
                  "href": null,
                  "moveEvents": true,
                  "placeholder": false,
                  "rootElement": "aws-btn",
                  "size": null,
                  "style": Object {},
                  "target": null,
                  "title": null,
                  "to": null,
                  "type": "primary",
                  "visible": true,
                },
                "ref": null,
                "rendered": "NEW GAME",
                "type": [Function],
              },
            ],
            "type": "div",
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="letter-tile-area"
          >
            <header
              className="App-header"
            >
              <Logo
                color="#864CBF"
              />
              <h1
                className="App-title"
              >
                POINTS
              </h1>
            </header>
            <h2
              className="items-header"
            >
              ITEMS
            </h2>
            <div
              className="items-area"
            >
              <LetterButton
                incrementTally={[Function]}
                item={
                  Object {
                    "bonusInterval": 3,
                    "bonusValue": 200,
                    "name": "A",
                    "tally": 0,
                    "value": 50,
                  }
                }
              />
              <LetterButton
                incrementTally={[Function]}
                item={
                  Object {
                    "bonusInterval": 2,
                    "bonusValue": 90,
                    "name": "B",
                    "tally": 0,
                    "value": 30,
                  }
                }
              />
              <LetterButton
                incrementTally={[Function]}
                item={
                  Object {
                    "bonusInterval": 0,
                    "bonusValue": 0,
                    "name": "C",
                    "tally": 0,
                    "value": 20,
                  }
                }
              />
              <LetterButton
                incrementTally={[Function]}
                item={
                  Object {
                    "bonusInterval": 0,
                    "bonusValue": 0,
                    "name": "D",
                    "tally": 0,
                    "value": 15,
                  }
                }
              />
            </div>
          </div>,
          <div
            className="scoring-area"
          >
            <header
              className="scoring-header"
            >
              <h1
                className="scoring-title"
              >
                PLAYER ITEMS
              </h1>
            </header>
            <table
              className="points-table"
            >
              <tbody>
                <tr
                  className="scoring-table-header"
                >
                  <th>
                    Item
                  </th>
                  <th>
                    Quantity
                  </th>
                  <th>
                    Points
                  </th>
                </tr>
              </tbody>
            </table>
            <div
              className="bonus"
            >
              Bonus: 
              <span
                className="bonus-value"
              >
                0
              </span>
            </div>
            <div
              className="totals"
            >
              <div
                className="total-column"
              >
                <div>
                  Total:
                </div>
                <div
                  className="total"
                >
                  0
                </div>
              </div>
              <t
                action={[Function]}
                active={false}
                blocked={false}
                bubbles={false}
                className="reset-button"
                cssModule={null}
                disabled={false}
                element={null}
                href={null}
                moveEvents={true}
                placeholder={false}
                rootElement="aws-btn"
                size={null}
                style={Object {}}
                target={null}
                title={null}
                to={null}
                type="primary"
                visible={true}
              >
                NEW GAME
              </t>
            </div>
          </div>,
        ],
        "className": "App",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <header
                className="App-header"
              >
                <Logo
                  color="#864CBF"
                />
                <h1
                  className="App-title"
                >
                  POINTS
                </h1>
              </header>,
              <h2
                className="items-header"
              >
                ITEMS
              </h2>,
              <div
                className="items-area"
              >
                <LetterButton
                  incrementTally={[Function]}
                  item={
                    Object {
                      "bonusInterval": 3,
                      "bonusValue": 200,
                      "name": "A",
                      "tally": 0,
                      "value": 50,
                    }
                  }
                />
                <LetterButton
                  incrementTally={[Function]}
                  item={
                    Object {
                      "bonusInterval": 2,
                      "bonusValue": 90,
                      "name": "B",
                      "tally": 0,
                      "value": 30,
                    }
                  }
                />
                <LetterButton
                  incrementTally={[Function]}
                  item={
                    Object {
                      "bonusInterval": 0,
                      "bonusValue": 0,
                      "name": "C",
                      "tally": 0,
                      "value": 20,
                    }
                  }
                />
                <LetterButton
                  incrementTally={[Function]}
                  item={
                    Object {
                      "bonusInterval": 0,
                      "bonusValue": 0,
                      "name": "D",
                      "tally": 0,
                      "value": 15,
                    }
                  }
                />
              </div>,
            ],
            "className": "letter-tile-area",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <Logo
                    color="#864CBF"
                  />,
                  <h1
                    className="App-title"
                  >
                    POINTS
                  </h1>,
                ],
                "className": "App-header",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "color": "#864CBF",
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "POINTS",
                    "className": "App-title",
                  },
                  "ref": null,
                  "rendered": "POINTS",
                  "type": "h1",
                },
              ],
              "type": "header",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "ITEMS",
                "className": "items-header",
              },
              "ref": null,
              "rendered": "ITEMS",
              "type": "h2",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <LetterButton
                    incrementTally={[Function]}
                    item={
                      Object {
                        "bonusInterval": 3,
                        "bonusValue": 200,
                        "name": "A",
                        "tally": 0,
                        "value": 50,
                      }
                    }
                  />,
                  <LetterButton
                    incrementTally={[Function]}
                    item={
                      Object {
                        "bonusInterval": 2,
                        "bonusValue": 90,
                        "name": "B",
                        "tally": 0,
                        "value": 30,
                      }
                    }
                  />,
                  <LetterButton
                    incrementTally={[Function]}
                    item={
                      Object {
                        "bonusInterval": 0,
                        "bonusValue": 0,
                        "name": "C",
                        "tally": 0,
                        "value": 20,
                      }
                    }
                  />,
                  <LetterButton
                    incrementTally={[Function]}
                    item={
                      Object {
                        "bonusInterval": 0,
                        "bonusValue": 0,
                        "name": "D",
                        "tally": 0,
                        "value": 15,
                      }
                    }
                  />,
                ],
                "className": "items-area",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": "A",
                  "nodeType": "class",
                  "props": Object {
                    "incrementTally": [Function],
                    "item": Object {
                      "bonusInterval": 3,
                      "bonusValue": 200,
                      "name": "A",
                      "tally": 0,
                      "value": 50,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "B",
                  "nodeType": "class",
                  "props": Object {
                    "incrementTally": [Function],
                    "item": Object {
                      "bonusInterval": 2,
                      "bonusValue": 90,
                      "name": "B",
                      "tally": 0,
                      "value": 30,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "C",
                  "nodeType": "class",
                  "props": Object {
                    "incrementTally": [Function],
                    "item": Object {
                      "bonusInterval": 0,
                      "bonusValue": 0,
                      "name": "C",
                      "tally": 0,
                      "value": 20,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": "D",
                  "nodeType": "class",
                  "props": Object {
                    "incrementTally": [Function],
                    "item": Object {
                      "bonusInterval": 0,
                      "bonusValue": 0,
                      "name": "D",
                      "tally": 0,
                      "value": 15,
                    },
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <header
                className="scoring-header"
              >
                <h1
                  className="scoring-title"
                >
                  PLAYER ITEMS
                </h1>
              </header>,
              <table
                className="points-table"
              >
                <tbody>
                  <tr
                    className="scoring-table-header"
                  >
                    <th>
                      Item
                    </th>
                    <th>
                      Quantity
                    </th>
                    <th>
                      Points
                    </th>
                  </tr>
                </tbody>
              </table>,
              <div
                className="bonus"
              >
                Bonus: 
                <span
                  className="bonus-value"
                >
                  0
                </span>
              </div>,
              <div
                className="totals"
              >
                <div
                  className="total-column"
                >
                  <div>
                    Total:
                  </div>
                  <div
                    className="total"
                  >
                    0
                  </div>
                </div>
                <t
                  action={[Function]}
                  active={false}
                  blocked={false}
                  bubbles={false}
                  className="reset-button"
                  cssModule={null}
                  disabled={false}
                  element={null}
                  href={null}
                  moveEvents={true}
                  placeholder={false}
                  rootElement="aws-btn"
                  size={null}
                  style={Object {}}
                  target={null}
                  title={null}
                  to={null}
                  type="primary"
                  visible={true}
                >
                  NEW GAME
                </t>
              </div>,
            ],
            "className": "scoring-area",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <h1
                  className="scoring-title"
                >
                  PLAYER ITEMS
                </h1>,
                "className": "scoring-header",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "PLAYER ITEMS",
                  "className": "scoring-title",
                },
                "ref": null,
                "rendered": "PLAYER ITEMS",
                "type": "h1",
              },
              "type": "header",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <tbody>
                  <tr
                    className="scoring-table-header"
                  >
                    <th>
                      Item
                    </th>
                    <th>
                      Quantity
                    </th>
                    <th>
                      Points
                    </th>
                  </tr>
                </tbody>,
                "className": "points-table",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <tr
                      className="scoring-table-header"
                    >
                      <th>
                        Item
                      </th>
                      <th>
                        Quantity
                      </th>
                      <th>
                        Points
                      </th>
                    </tr>,
                    Array [],
                  ],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <th>
                          Item
                        </th>,
                        <th>
                          Quantity
                        </th>,
                        <th>
                          Points
                        </th>,
                      ],
                      "className": "scoring-table-header",
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Item",
                        },
                        "ref": null,
                        "rendered": "Item",
                        "type": "th",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Quantity",
                        },
                        "ref": null,
                        "rendered": "Quantity",
                        "type": "th",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": "Points",
                        },
                        "ref": null,
                        "rendered": "Points",
                        "type": "th",
                      },
                    ],
                    "type": "tr",
                  },
                ],
                "type": "tbody",
              },
              "type": "table",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Bonus: ",
                  <span
                    className="bonus-value"
                  >
                    0
                  </span>,
                ],
                "className": "bonus",
              },
              "ref": null,
              "rendered": Array [
                "Bonus: ",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": 0,
                    "className": "bonus-value",
                  },
                  "ref": null,
                  "rendered": 0,
                  "type": "span",
                },
              ],
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div
                    className="total-column"
                  >
                    <div>
                      Total:
                    </div>
                    <div
                      className="total"
                    >
                      0
                    </div>
                  </div>,
                  <t
                    action={[Function]}
                    active={false}
                    blocked={false}
                    bubbles={false}
                    className="reset-button"
                    cssModule={null}
                    disabled={false}
                    element={null}
                    href={null}
                    moveEvents={true}
                    placeholder={false}
                    rootElement="aws-btn"
                    size={null}
                    style={Object {}}
                    target={null}
                    title={null}
                    to={null}
                    type="primary"
                    visible={true}
                  >
                    NEW GAME
                  </t>,
                ],
                "className": "totals",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <div>
                        Total:
                      </div>,
                      <div
                        className="total"
                      >
                        0
                      </div>,
                    ],
                    "className": "total-column",
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Total:",
                      },
                      "ref": null,
                      "rendered": "Total:",
                      "type": "div",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": 0,
                        "className": "total",
                      },
                      "ref": null,
                      "rendered": 0,
                      "type": "div",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "action": [Function],
                    "active": false,
                    "blocked": false,
                    "bubbles": false,
                    "children": "NEW GAME",
                    "className": "reset-button",
                    "cssModule": null,
                    "disabled": false,
                    "element": null,
                    "href": null,
                    "moveEvents": true,
                    "placeholder": false,
                    "rootElement": "aws-btn",
                    "size": null,
                    "style": Object {},
                    "target": null,
                    "title": null,
                    "to": null,
                    "type": "primary",
                    "visible": true,
                  },
                  "ref": null,
                  "rendered": "NEW GAME",
                  "type": [Function],
                },
              ],
              "type": "div",
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
